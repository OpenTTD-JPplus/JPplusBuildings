
/*

When using Sprite Directions, list out the outcomes desired with the following results the switch in the nml file for the House

0 
1  SE Only
2  SW Only
3  SE && SW		SOUTH
4  NW Only
5  NW && SE		
6  NW && SW		WEST
7  NW, SE, SW
8  NE Only
9  NE && SE		EAST
10 NE && SW
11 NE, SE, SW
12 NE && NW		NORTH
13 NE, NW, SE
14 NE, NW, SW
15 All			ALL
*/

// Road to the SE
switch (FEAT_HOUSES, SELF, switch_SE_facing, HasRoadAdjacentSE() )
	{1: return 1; return 0;}

// Road to the SW
switch (FEAT_HOUSES, SELF, switch_SW_facing, HasRoadAdjacentSW() )
	{1: return 2; return 0;}

// Road to the NW
switch (FEAT_HOUSES, SELF, switch_NW_facing, HasRoadAdjacentNW() )
	{1: return 4; return 0;}

// Road to the NE
switch (FEAT_HOUSES, SELF, switch_NE_facing, HasRoadAdjacentNE() )
	{1: return 8; return 0;}

switch (FEAT_HOUSES, SELF, SpriteDirections, 
	switch_SE_facing() + 	// 0 or 1
	switch_SW_facing() +	// 0 or 2
	switch_NW_facing() +	// 0 or 4
	switch_NE_facing()		// 0 or 8
){return;}

// South Check

	switch (FEAT_HOUSES, SELF, switch_south_NW_Two_IsBuilding, HasBuildingOneTileGapNW())
		{1: return 1; return 0;}

	switch (FEAT_HOUSES, SELF, switch_south_NW_Two_IsRoad, HasRoadOneTileGapNW() )
		{1: return 2; return 0;}

	switch (FEAT_HOUSES, SELF, switch_south_NE_Two_IsBuilding, HasBuildingOneTileGapNE() )
		{1: return 4; return 0;}

	switch (FEAT_HOUSES, SELF, switch_south_NE_Two_IsRoad, HasRoadOneTileGapNE() )
		{1: return 8; return 0;}


	switch (FEAT_HOUSES, SELF, SpriteDirectionsSouth, 
		switch_south_NW_Two_IsBuilding() + 	// 0 or 1
		switch_south_NW_Two_IsRoad() +		// 0 or 2
		switch_south_NE_Two_IsBuilding() +	// 0 or 4
		switch_south_NE_Two_IsRoad()		// 0 or 8
	){return;}

/* EAST */

	switch (FEAT_HOUSES, SELF, switch_east_NW_Two_IsBuilding, HasBuildingOneTileGapNW())
		{1: return 1; return 0;}

	switch (FEAT_HOUSES, SELF, switch_east_NW_Two_IsRoad, HasRoadOneTileGapNW() )
		{1: return 2; return 0;}

	switch (FEAT_HOUSES, SELF, switch_east_SW_Two_IsBuilding, HasBuildingOneTileGapSW() )
		{1: return 4; return 0;}

	switch (FEAT_HOUSES, SELF, switch_east_SW_Two_IsRoad, HasRoadOneTileGapSW() )
		{1: return 8; return 0;}


	switch (FEAT_HOUSES, SELF, SpriteDirectionsEast, 
		switch_east_NW_Two_IsBuilding() + 	// 0 or 1
		switch_east_NW_Two_IsRoad() +		// 0 or 2
		switch_east_SW_Two_IsBuilding() +	// 0 or 4
		switch_east_SW_Two_IsRoad()			// 0 or 8
	){return;}

/* WEST  */

	switch (FEAT_HOUSES, SELF, switch_west_NE_Two_IsBuilding, HasBuildingOneTileGapNE())
		{1: return 1; return 0;}

	switch (FEAT_HOUSES, SELF, switch_west_NE_Two_IsRoad, HasRoadOneTileGapNE() )
		{1: return 2; return 0;}

	switch (FEAT_HOUSES, SELF, switch_west_SE_Two_IsBuilding, HasBuildingOneTileGapSE() )
		{1: return 4; return 0;}

	switch (FEAT_HOUSES, SELF, switch_west_SE_Two_IsRoad, HasRoadOneTileGapSE() )
		{1: return 8; return 0;}


	switch (FEAT_HOUSES, SELF, SpriteDirectionsWest, 
		switch_west_NE_Two_IsBuilding() + 	// 0 or 1
		switch_west_NE_Two_IsRoad() +		// 0 or 2
		switch_west_SE_Two_IsBuilding() +	// 0 or 4
		switch_west_SE_Two_IsRoad()			// 0 or 8
	){return;}

/*  NORTH */

	switch (FEAT_HOUSES, SELF, switch_north_SW_Two_IsBuilding, HasBuildingOneTileGapSW())
		{1: return 1; return 0;}

	switch (FEAT_HOUSES, SELF, switch_north_SW_Two_IsRoad, HasRoadOneTileGapSW() )
		{1: return 2; return 0;}

	switch (FEAT_HOUSES, SELF, switch_north_SE_Two_IsBuilding, HasBuildingOneTileGapSE() )
		{1: return 4; return 0;}

	switch (FEAT_HOUSES, SELF, switch_north_SE_Two_IsRoad, HasRoadOneTileGapSE() )
		{1: return 8; return 0;}


	switch (FEAT_HOUSES, SELF, SpriteDirectionsNorth, 
		switch_north_SW_Two_IsBuilding() + 	// 0 or 1
		switch_north_SW_Two_IsRoad() +		// 0 or 2
		switch_north_SE_Two_IsBuilding() +	// 0 or 4
		switch_north_SE_Two_IsRoad()		// 0 or 8
	){return;}
