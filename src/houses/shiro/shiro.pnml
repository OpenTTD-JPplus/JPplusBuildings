
// shiro

// Spritelayouts

	// N variant
		// P level
			// Norm
				spritelayout sprlay_shiro_n_p_norm {
					ground {
						sprite:spr_ground_shiro_norm (3);
					}
					building {
						sprite: spr_shiro_p_norm (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_norm (3);
					}
				}

			// Snow
				spritelayout sprlay_shiro_n_p_snow {
					ground {
						sprite:spr_ground_shiro_snow (3);
					}
					building {
						sprite: spr_shiro_p_snow (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_snow (3);
					}
				}

		// Q level
			// Norm
				spritelayout sprlay_shiro_n_q_norm {
					ground {
						sprite:spr_ground_shiro_norm (3);
					}
					building {
						sprite: spr_shiro_q_norm (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_norm (3);
					}
				}

			// Snow
				spritelayout sprlay_shiro_n_q_snow {
					ground {
						sprite:spr_ground_shiro_snow (3);
					}
					building {
						sprite: spr_shiro_q_snow (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_snow (3);
					}
				}

		// R level
			// Norm
				spritelayout sprlay_shiro_n_r_norm {
					ground {
						sprite:spr_ground_shiro_norm (3);
					}
					building {
						sprite: spr_shiro_r_norm (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_norm (3);
					}
				}

			// Snow
				spritelayout sprlay_shiro_n_r_snow {
					ground {
						sprite:spr_ground_shiro_snow (3);
					}
					building {
						sprite: spr_shiro_r_snow (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_snow (3);
					}
				}

		// U level
			// Norm
				spritelayout sprlay_shiro_n_u_norm {
					ground {
						sprite:spr_ground_shiro_norm (3);
					}
					building {
						sprite: spr_shiro_u_norm (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_norm (3);
					}
				}

			// Snow
				spritelayout sprlay_shiro_n_u_snow {
					ground {
						sprite:spr_ground_shiro_snow (3);
					}
					building {
						sprite: spr_shiro_u_snow (3);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
						hide_sprite: 1;
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_snow (3);
					}
				}

	// E variant
		// P level
			// Norm
				spritelayout sprlay_shiro_e_p_norm {
					ground {
						sprite:spr_ground_shiro_norm (2);
					}
					building {
						sprite: spr_shiro_p_norm (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_norm (2);
					}
					childsprite { // trees
						sprite: spr_shiro_e_p_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_e_p_snow {
					ground {
						sprite:spr_ground_shiro_snow (2);
					}
					building {
						sprite: spr_shiro_p_snow (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_snow (2);
					}
					childsprite { // trees
						sprite: spr_shiro_e_p_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// Q level
			// Norm
				spritelayout sprlay_shiro_e_q_norm {
					ground {
						sprite:spr_ground_shiro_norm (2);
					}
					building {
						sprite: spr_shiro_q_norm (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_norm (2);
					}
				}

			// Snow
				spritelayout sprlay_shiro_e_q_snow {
					ground {
						sprite:spr_ground_shiro_snow (2);
					}
					building {
						sprite: spr_shiro_q_snow (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_snow (2);
					}
				}

		// R level
			// Norm
				spritelayout sprlay_shiro_e_r_norm {
					ground {
						sprite:spr_ground_shiro_norm (2);
					}
					building {
						sprite: spr_shiro_r_norm (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_norm (2);
					}
				}

			// Snow
				spritelayout sprlay_shiro_e_r_snow {
					ground {
						sprite:spr_ground_shiro_snow (2);
					}
					building {
						sprite: spr_shiro_r_snow (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_snow (2);
					}
				}

		// U level
			// Norm
				spritelayout sprlay_shiro_e_u_norm {
					ground {
						sprite:spr_ground_shiro_norm (2);
					}
					building {
						sprite: spr_shiro_u_norm (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_norm (2);
					}
					childsprite { // trees
						sprite: spr_shiro_e_u_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_e_u_snow {
					ground {
						sprite:spr_ground_shiro_snow (2);
					}
					building {
						sprite: spr_shiro_u_snow (2);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_snow (2);
					}
					childsprite { // trees
						sprite: spr_shiro_e_u_trees (3); // Seasonal, but winter tree in the snow
					}
				}

	// W variant
		// P level
			// Norm
				spritelayout sprlay_shiro_w_p_norm {
					ground {
						sprite:spr_ground_shiro_norm (0);
					}
					building {
						sprite: spr_shiro_p_norm (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_norm (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_p_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_w_p_snow {
					ground {
						sprite:spr_ground_shiro_snow (0);
					}
					building {
						sprite: spr_shiro_p_snow (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_snow (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_p_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// Q level
			// Norm
				spritelayout sprlay_shiro_w_q_norm {
					ground {
						sprite:spr_ground_shiro_norm (0);
					}
					building {
						sprite: spr_shiro_q_norm (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_norm (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_q_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_w_q_snow {
					ground {
						sprite:spr_ground_shiro_snow (0);
					}
					building {
						sprite: spr_shiro_q_snow (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_snow (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_q_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// R level
			// Norm
				spritelayout sprlay_shiro_w_r_norm {
					ground {
						sprite:spr_ground_shiro_norm (0);
					}
					building {
						sprite: spr_shiro_r_norm (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_norm (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_r_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_w_r_snow {
					ground {
						sprite:spr_ground_shiro_snow (0);
					}
					building {
						sprite: spr_shiro_r_snow (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_snow (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_r_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// U level
			// Norm
				spritelayout sprlay_shiro_w_u_norm {
					ground {
						sprite:spr_ground_shiro_norm (0);
					}
					building {
						sprite: spr_shiro_u_norm (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_norm (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_u_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_w_u_snow {
					ground {
						sprite:spr_ground_shiro_snow (0);
					}
					building {
						sprite: spr_shiro_u_snow (0);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_snow (0);
					}
					childsprite { // trees
						sprite: spr_shiro_w_u_trees (3); // Seasonal, but winter tree in the snow
					}
				}

	// S variant
		// P level
			// Norm
				spritelayout sprlay_shiro_s_p_norm {
					ground {
						sprite:spr_ground_shiro_norm (1);
					}
					building {
						sprite: spr_shiro_p_norm (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_norm (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_p_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_s_p_snow {
					ground {
						sprite:spr_ground_shiro_snow (1);
					}
					building {
						sprite: spr_shiro_p_snow (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_p_ground_snow (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_p_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// Q level
			// Norm
				spritelayout sprlay_shiro_s_q_norm {
					ground {
						sprite:spr_ground_shiro_norm (1);
					}
					building {
						sprite: spr_shiro_q_norm (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_norm (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_q_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_s_q_snow {
					ground {
						sprite:spr_ground_shiro_snow (1);
					}
					building {
						sprite: spr_shiro_q_snow (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_q_ground_snow (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_q_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// R level
			// Norm
				spritelayout sprlay_shiro_s_r_norm {
					ground {
						sprite:spr_ground_shiro_norm (1);
					}
					building {
						sprite: spr_shiro_r_norm (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_norm (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_r_trees (LOAD_TEMP(3)); // Seasonal
					}
				}

			// Snow
				spritelayout sprlay_shiro_s_r_snow {
					ground {
						sprite:spr_ground_shiro_snow (1);
					}
					building {
						sprite: spr_shiro_r_snow (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_r_ground_snow (1);
					}
					childsprite { // trees
						sprite: spr_shiro_s_r_trees (3); // Seasonal, but winter tree in the snow
					}
				}

		// U level
			// Norm
				spritelayout sprlay_shiro_s_u_norm {
					ground {
						sprite:spr_ground_shiro_norm (1);
					}
					building {
						sprite: spr_shiro_u_norm (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_norm (1);
					}
				}

			// Snow
				spritelayout sprlay_shiro_s_u_snow {
					ground {
						sprite:spr_ground_shiro_snow (1);
					}
					building {
						sprite: spr_shiro_u_snow (1);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // ground
						sprite: spr_shiro_u_ground_snow (1);
					}
				}

/*
==================
Getbits Allocation
==================
Childsprites: {'ground': {'conditions': ['2x2']}, 'trees': {'conditions': ['seasonal', 'variant', 'single_climate', 'level_driven'], 'level': {'p': ['no_north'], 'q': ['no_north', 'no_east'], 'r': ['no_north', 'no_east'], 'u': ['no_north', 'no_south']}}}

Colour Profiles: {'p': {'sum_prob': 4, 'count': 4}, 'q': {'sum_prob': 4, 'count': 4}, 'r': {'sum_prob': 4, 'count': 4}, 'u': {'sum_prob': 4, 'count': 4}}

Feature		Num		Start	Bits	Storage
------------------------------------------------------------------
Levels		4		0		2		🚫
Building	4		2		2		LOAD_TEMP(0)
*/

// Random Switches
	// Building Colours
		switch (FEAT_HOUSES, SELF, shiro_build_clr_p, getbits(random_bits, 2, 2)) {
			0:	return 55;
			1:	return 56;
			2:	return 57;
				return 58;
		}
		switch (FEAT_HOUSES, SELF, shiro_build_clr_q, getbits(random_bits, 2, 2)) {
			0:	return 55;
			1:	return 56;
			2:	return 57;
				return 58;
		}
		switch (FEAT_HOUSES, SELF, shiro_build_clr_r, getbits(random_bits, 2, 2)) {
			0:	return 49;
			1:	return 66;
			2:	return 68;
				return 74;
		}
		switch (FEAT_HOUSES, SELF, shiro_build_clr_u, getbits(random_bits, 2, 2)) {
			0:	return 32;
			1:	return 40;
			2:	return 66;
				return 74;
		}
// Spritelayout Switches
	// n
		// p
			switch (FEAT_HOUSES,SELF, switch_shiro_n_p_sprites, [
				STORE_TEMP(shiro_build_clr_p(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_n_p_snow; sprlay_shiro_n_p_norm; }
		// q
			switch (FEAT_HOUSES,SELF, switch_shiro_n_q_sprites, [
				STORE_TEMP(shiro_build_clr_q(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_n_q_snow; sprlay_shiro_n_q_norm; }
		// r
			switch (FEAT_HOUSES,SELF, switch_shiro_n_r_sprites, [
				STORE_TEMP(shiro_build_clr_r(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_n_r_snow; sprlay_shiro_n_r_norm; }
		// u
			switch (FEAT_HOUSES,SELF, switch_shiro_n_u_sprites, [
				STORE_TEMP(shiro_build_clr_u(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_n_u_snow; sprlay_shiro_n_u_norm; }

	// e
		// p
			switch (FEAT_HOUSES,SELF, switch_shiro_e_p_sprites, [
				STORE_TEMP(shiro_build_clr_p(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_e_p_snow; sprlay_shiro_e_p_norm; }
		// q
			switch (FEAT_HOUSES,SELF, switch_shiro_e_q_sprites, [
				STORE_TEMP(shiro_build_clr_q(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_e_q_snow; sprlay_shiro_e_q_norm; }
		// r
			switch (FEAT_HOUSES,SELF, switch_shiro_e_r_sprites, [
				STORE_TEMP(shiro_build_clr_r(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_e_r_snow; sprlay_shiro_e_r_norm; }
		// u
			switch (FEAT_HOUSES,SELF, switch_shiro_e_u_sprites, [
				STORE_TEMP(shiro_build_clr_u(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_e_u_snow; sprlay_shiro_e_u_norm; }

	// w
		// p
			switch (FEAT_HOUSES,SELF, switch_shiro_w_p_sprites, [
				STORE_TEMP(shiro_build_clr_p(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_w_p_snow; sprlay_shiro_w_p_norm; }
		// q
			switch (FEAT_HOUSES,SELF, switch_shiro_w_q_sprites, [
				STORE_TEMP(shiro_build_clr_q(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_w_q_snow; sprlay_shiro_w_q_norm; }
		// r
			switch (FEAT_HOUSES,SELF, switch_shiro_w_r_sprites, [
				STORE_TEMP(shiro_build_clr_r(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_w_r_snow; sprlay_shiro_w_r_norm; }
		// u
			switch (FEAT_HOUSES,SELF, switch_shiro_w_u_sprites, [
				STORE_TEMP(shiro_build_clr_u(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_w_u_snow; sprlay_shiro_w_u_norm; }

	// s
		// p
			switch (FEAT_HOUSES,SELF, switch_shiro_s_p_sprites, [
				STORE_TEMP(shiro_build_clr_p(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_s_p_snow; sprlay_shiro_s_p_norm; }
		// q
			switch (FEAT_HOUSES,SELF, switch_shiro_s_q_sprites, [
				STORE_TEMP(shiro_build_clr_q(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_s_q_snow; sprlay_shiro_s_q_norm; }
		// r
			switch (FEAT_HOUSES,SELF, switch_shiro_s_r_sprites, [
				STORE_TEMP(shiro_build_clr_r(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_s_r_snow; sprlay_shiro_s_r_norm; }
		// u
			switch (FEAT_HOUSES,SELF, switch_shiro_s_u_sprites, [
				STORE_TEMP(shiro_build_clr_u(), 0),
				STORE_TEMP(Season(), 3),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_shiro_s_u_snow; sprlay_shiro_s_u_norm; }

	// Level Selection
		switch (FEAT_HOUSES, SELF, switch_shiro_n_sprites, getbits(random_bits, 0, 2)) {
			0:	switch_shiro_n_p_sprites;
			1:	switch_shiro_n_q_sprites;
			2:	switch_shiro_n_r_sprites;
				switch_shiro_n_u_sprites;
		}

		switch (FEAT_HOUSES, SELF, switch_shiro_e_sprites, getbits(random_bits, 0, 2)) {
			0:	switch_shiro_e_p_sprites;
			1:	switch_shiro_e_q_sprites;
			2:	switch_shiro_e_r_sprites;
				switch_shiro_e_u_sprites;
		}

		switch (FEAT_HOUSES, SELF, switch_shiro_w_sprites, getbits(random_bits, 0, 2)) {
			0:	switch_shiro_w_p_sprites;
			1:	switch_shiro_w_q_sprites;
			2:	switch_shiro_w_r_sprites;
				switch_shiro_w_u_sprites;
		}

		switch (FEAT_HOUSES, SELF, switch_shiro_s_sprites, getbits(random_bits, 0, 2)) {
			0:	switch_shiro_s_p_sprites;
			1:	switch_shiro_s_q_sprites;
			2:	switch_shiro_s_r_sprites;
				switch_shiro_s_u_sprites;
		}

// Name Switches
		switch (FEAT_HOUSES, SELF, switch_shiro_name, getbits(random_bits, 0, 2) ){
			0:	return string(NAME_HIMEJI_SHIRO);	// p
			1:	return string(NAME_MATSUMOTO_SHIRO);	// q
			2:	return string(NAME_KUMAMOTO_SHIRO);	// r
				return string(NAME_OKAYAMA_SHIRO);	// u
	}

// Item Block
	item(FEAT_HOUSES, item_shiro, 216, HOUSE_SIZE_2X2){
		property {
			substitute:					20;
			population:					100;
			building_flags:				bitmask(HOUSE_FLAG_NOT_SLOPED,HOUSE_FLAG_PROTECTED);
			accepted_cargos:			[[PASS, 8],[MAIL, 1],[FOOD, 2]];
			local_authority_impact:		80;
			removal_cost_multiplier:	80;
			probability:				3;
			years_available:			[1700,0xFFFF];
			minimum_lifetime:			20;
			availability_mask:			[bitmask(TOWNZONE_INNER_SUBURB, TOWNZONE_OUTER_SUBURB), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE, CLIMATE_TROPIC)];
			building_class:				3;
			}
		graphics {
			graphics_north:				switch_shiro_n_sprites;
			graphics_east:				switch_shiro_e_sprites;
			graphics_west:				switch_shiro_w_sprites;
			graphics_south:				switch_shiro_s_sprites;
			name:						switch_shiro_name;
			construction_check:			switch_shiro_con_check;
			cargo_production:			func_produce(10,2);
		}
	}
