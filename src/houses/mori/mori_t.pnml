
// mori_t

// Spritelayouts

	// A variant
		// 3L level
			// Norm
				spritelayout sprlay_mori_t_a_3L_norm {
					ground {
						sprite:spr_mori_a_ground_norm(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_a_3L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

			// Snow
				spritelayout sprlay_mori_t_a_3L_snow {
					ground {
						sprite:spr_mori_a_ground_snow(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_a_3L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

		// 4L level
			// Norm
				spritelayout sprlay_mori_t_a_4L_norm {
					ground {
						sprite:spr_mori_a_ground_norm(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_a_4L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

			// Snow
				spritelayout sprlay_mori_t_a_4L_snow {
					ground {
						sprite:spr_mori_a_ground_snow(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_a_4L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

	// B variant
		// 3L level
			// Norm
				spritelayout sprlay_mori_t_b_3L_norm {
					ground {
						sprite:spr_mori_b_ground_norm(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_b_3L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

			// Snow
				spritelayout sprlay_mori_t_b_3L_snow {
					ground {
						sprite:spr_mori_b_ground_snow(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_b_3L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

		// 4L level
			// Norm
				spritelayout sprlay_mori_t_b_4L_norm {
					ground {
						sprite:spr_mori_b_ground_norm(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_b_4L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

			// Snow
				spritelayout sprlay_mori_t_b_4L_snow {
					ground {
						sprite:spr_mori_b_ground_snow(LOAD_TEMP(8));
					}
					building {
						sprite: spr_mori_t_b_4L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
				}

/*
==================
Getbits Allocation
==================
Childsprites: ðŸš«

Colour Profiles: {'new': {'sum_prob': 16, 'count': 16}, 'old': {'sum_prob': 16, 'count': 16}}
	âœ… new colour profile has 16 unique colours, with probabilities summing to 16
	âœ… old colour profile has 16 unique colours, with probabilities summing to 16

Feature		Num		Start	Bits	Storage
------------------------------------------------------------------
Levels		2		0		1		ðŸš«
Building	16		1		4		LOAD_TEMP(0)
*/

// Random Switches
	// Building Colours
		switch (FEAT_HOUSES, SELF, mori_t_build_clr_new, getbits(random_bits, 1, 4)) {
			0:	return 16;
			1:	return 31;
			2:	return 32;
			3:	return 35;
			4:	return 36;
			5:	return 44;
			6:	return 47;
			7:	return 48;
			8:	return 61;
			9:	return 63;
			10:	return 66;
			11:	return 70;
			12:	return 73;
			13:	return 76;
			14:	return 80;
				return 82;
		}
		switch (FEAT_HOUSES, SELF, mori_t_build_clr_old, getbits(random_bits, 1, 4)) {
			0:	return 20;
			1:	return 31;
			2:	return 32;
			3:	return 35;
			4:	return 36;
			5:	return 44;
			6:	return 47;
			7:	return 48;
			8:	return 54;
			9:	return 61;
			10:	return 63;
			11:	return 65;
			12:	return 69;
			13:	return 70;
			14:	return 73;
				return 75;
		}
// Spritelayout Switches
	// a
		// 3L
			switch (FEAT_HOUSES,SELF, switch_mori_t_a_3L_sprites, [
				STORE_TEMP((current_year - age) < 1964 ? mori_t_build_clr_old() : mori_t_build_clr_new(), 0),
				STORE_TEMP(GroundRoadAware(), 8),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_mori_t_a_3L_snow; sprlay_mori_t_a_3L_norm; }
		// 4L
			switch (FEAT_HOUSES,SELF, switch_mori_t_a_4L_sprites, [
				STORE_TEMP((current_year - age) < 1964 ? mori_t_build_clr_old() : mori_t_build_clr_new(), 0),
				STORE_TEMP(GroundRoadAware(), 8),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_mori_t_a_4L_snow; sprlay_mori_t_a_4L_norm; }

	// b
		// 3L
			switch (FEAT_HOUSES,SELF, switch_mori_t_b_3L_sprites, [
				STORE_TEMP((current_year - age) < 1964 ? mori_t_build_clr_old() : mori_t_build_clr_new(), 0),
				STORE_TEMP(GroundRoadAware(), 8),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_mori_t_b_3L_snow; sprlay_mori_t_b_3L_norm; }
		// 4L
			switch (FEAT_HOUSES,SELF, switch_mori_t_b_4L_sprites, [
				STORE_TEMP((current_year - age) < 1964 ? mori_t_build_clr_old() : mori_t_build_clr_new(), 0),
				STORE_TEMP(GroundRoadAware(), 8),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_mori_t_b_4L_snow; sprlay_mori_t_b_4L_norm; }

	// Level Selection
		switch (FEAT_HOUSES, SELF, switch_mori_t_a_sprites, getbits(random_bits, 0, 1)) {
			0:	switch_mori_t_a_3L_sprites;
				switch_mori_t_a_4L_sprites;
		}

		switch (FEAT_HOUSES, SELF, switch_mori_t_b_sprites, getbits(random_bits, 0, 1)) {
			0:	switch_mori_t_b_3L_sprites;
				switch_mori_t_b_4L_sprites;
		}

	// Variant Selection for ['a', 'b'] using SpriteDirectionsAB()
	
	random_switch (FEAT_HOUSES, SELF, switch_mori_t_random_sprites) {
		1: switch_mori_t_a_sprites;
		1: switch_mori_t_b_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_mori_t_south_check, SpriteDirectionsSouth()) {
		4: switch_mori_t_a_sprites;
		6: switch_mori_t_a_sprites;
		9: switch_mori_t_b_sprites;
		switch_mori_t_random_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_mori_t_east_check, SpriteDirectionsEast()) {
		4: switch_mori_t_a_sprites;
		6: switch_mori_t_a_sprites;
		9: switch_mori_t_b_sprites;
		switch_mori_t_random_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_mori_t_west_check, SpriteDirectionsWest()) {
		6: switch_mori_t_b_sprites;
		9: switch_mori_t_a_sprites;
		switch_mori_t_random_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_mori_t_north_check, SpriteDirectionsNorth()) {
		6: switch_mori_t_b_sprites;
		9: switch_mori_t_a_sprites;
		switch_mori_t_random_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_mori_t_sprites, SpriteDirections() ) {
		1: switch_mori_t_a_sprites;
		2: switch_mori_t_b_sprites;
		3: switch_mori_t_south_check;
		4: switch_mori_t_a_sprites;
		5: switch_mori_t_a_sprites;
		6: switch_mori_t_west_check;
		8: switch_mori_t_b_sprites;
		9: switch_mori_t_east_check;
		10: switch_mori_t_b_sprites;
		12: switch_mori_t_north_check;
		switch_mori_t_random_sprites;
	}

// Item Block
	item(FEAT_HOUSES, item_mori_t, 40, HOUSE_SIZE_1X1){
		property {
			substitute:					27;
			name:						string(STR_CONCAT_2, string(NAME_MORI),string(SMALL));
			population:					75;
			accepted_cargos:			[[PASS, 4],[MAIL, 2]];
			local_authority_impact:		80;
			removal_cost_multiplier:	80;
			probability:				3;
			years_available:			[1945,0xFFFF];
			minimum_lifetime:			5;
			availability_mask:			[ALL_TOWNZONES & ~bitmask(TOWNZONE_EDGE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE, CLIMATE_TROPIC)];
			building_class:				22;
			}
		graphics {
			default:					switch_mori_t_sprites;
			construction_check:			switch_tiny_con_check;
			cargo_production:			func_produce(6,2);
		}
	}
