
// wako

// Spritelayouts

	// A variant
		// L level
			// Norm
				spritelayout sprlay_wako_a_L_norm {
					ground {
						sprite:spr_wako_a_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_a_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_a_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_a_L_snow {
					ground {
						sprite:spr_wako_a_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_a_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_a_L_trees_snow (construction_state); // Same as building
					}
				}

	// B variant
		// L level
			// Norm
				spritelayout sprlay_wako_b_L_norm {
					ground {
						sprite:spr_wako_b_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_b_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_b_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_b_L_snow {
					ground {
						sprite:spr_wako_b_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_b_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_b_L_trees_snow (construction_state); // Same as building
					}
				}

	// E variant
		// L level
			// Norm
				spritelayout sprlay_wako_e_L_norm {
					ground {
						sprite:spr_wako_e_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_e_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_e_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_e_L_snow {
					ground {
						sprite:spr_wako_e_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_e_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_e_L_trees_snow (construction_state); // Same as building
					}
				}

	// N variant
		// L level
			// Norm
				spritelayout sprlay_wako_n_L_norm {
					ground {
						sprite:spr_wako_n_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_n_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_n_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_n_L_snow {
					ground {
						sprite:spr_wako_n_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_n_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_n_L_trees_snow (construction_state); // Same as building
					}
				}

	// S variant
		// L level
			// Norm
				spritelayout sprlay_wako_s_L_norm {
					ground {
						sprite:spr_wako_s_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_s_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_s_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_s_L_snow {
					ground {
						sprite:spr_wako_s_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_s_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_s_L_trees_snow (construction_state); // Same as building
					}
				}

	// W variant
		// L level
			// Norm
				spritelayout sprlay_wako_w_L_norm {
					ground {
						sprite:spr_wako_w_ground_norm (construction_state);
					}
					building {
						sprite: spr_wako_w_L_norm (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_w_L_trees_norm (construction_state); // Same as building
					}
				}

			// Snow
				spritelayout sprlay_wako_w_L_snow {
					ground {
						sprite:spr_wako_w_ground_snow (construction_state);
					}
					building {
						sprite: spr_wako_w_L_snow (construction_state);
						recolour_mode: RECOLOUR_REMAP;
						palette: recolour_remap + LOAD_TEMP(0);
					}
					childsprite { // trees
						sprite: spr_wako_w_L_trees_snow (construction_state); // Same as building
					}
				}

/*
==================
Getbits Allocation
==================
Childsprites: {'trees': {'conditions': ['single', 'variant']}}

Colour Profiles: {'new': {'sum_prob': 8, 'count': 7}}
	âœ… new colour profile has 7 unique colours, with probabilities summing to 8

Feature		Num		Start	Bits	Storage
------------------------------------------------------------------
Building	8		0		3		LOAD_TEMP(0)
*/

// Random Switches
	// Building Colours
		switch (FEAT_HOUSES, SELF, wako_build_clr_new, getbits(random_bits, 0, 3)) {
			0:	return 43;
			1:	return 44;
			2:	return 45;
			3:	return 46;
			4:	return 49;
			5:	return 52;
				return 58;
		}
// Spritelayout Switches
	// a
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_a_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_a_L_snow; sprlay_wako_a_L_norm; }

	// b
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_b_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_b_L_snow; sprlay_wako_b_L_norm; }

	// e
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_e_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_e_L_snow; sprlay_wako_e_L_norm; }

	// n
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_n_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_n_L_snow; sprlay_wako_n_L_norm; }

	// s
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_s_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_s_L_snow; sprlay_wako_s_L_norm; }

	// w
		// L
			switch (FEAT_HOUSES,SELF, switch_wako_w_sprites, [
				STORE_TEMP(wako_build_clr_new(), 0),
				terrain_type == TILETYPE_SNOW]) 
				{1: sprlay_wako_w_L_snow; sprlay_wako_w_L_norm; }

	// Variant Selection for ['a', 'b', 'e', 'n', 's', 'w'] using SpriteDirectionsABENSW()
	
	random_switch (FEAT_HOUSES, SELF, switch_wako_random_sprites) {
		1: switch_wako_a_sprites;
		1: switch_wako_b_sprites;
	}

	switch (FEAT_HOUSES, SELF, switch_wako_sprites, SpriteDirections() ) {
		1:  switch_wako_a_sprites;
		2:  switch_wako_b_sprites;
		3:  switch_wako_s_sprites;
		4:  switch_wako_a_sprites;
		5:  switch_wako_a_sprites;
		6:  switch_wako_w_sprites;
		7:  switch_wako_a_sprites;
		8:  switch_wako_b_sprites;
		9:  switch_wako_e_sprites;
		10: switch_wako_b_sprites;
		11: switch_wako_b_sprites;
		12: switch_wako_n_sprites;
		13: switch_wako_a_sprites;
		14: switch_wako_b_sprites;
		switch_wako_random_sprites;
	}

// Item Block
	item(FEAT_HOUSES, item_wako, 98, HOUSE_SIZE_1X1){
		property {
			substitute:					27;
			name:						string(NAME_WAKO);
			population:					150;
			accepted_cargos:			[[PASS, 4],[MAIL, 2], [GOOD, 2]];
			local_authority_impact:		80;
			removal_cost_multiplier:	80;
			probability:				5;
			years_available:			[1900,1950];
			minimum_lifetime:			15;
			availability_mask:			[bitmask(TOWNZONE_CENTRE), bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, ABOVE_SNOWLINE, CLIMATE_TROPIC)];
			building_class:				99;
			}
		graphics {
			default:					switch_wako_sprites;
			construction_check:			switch_shirokiya_con_check;
			protection:					switch_shirokiya_protection;
			cargo_production:			func_produce(14,5);
		}
	}
